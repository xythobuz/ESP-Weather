// !!DO NOT EDIT, AUTO-GENERATED FILE!!
// Use convert-static.py to recreate this.

#ifndef __STATIC_H__
#define __STATIC_H__

#define HTML_BEGIN "<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><title>ESP-Weather</title><script src=\"https://code.jquery.com/jquery-3.1.1.min.js\" integrity=\"sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=\" crossorigin=\"anonymous\" defer></script><script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\" integrity=\"sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa\" crossorigin=\"anonymous\" defer></script><script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.bundle.min.js\" integrity=\"sha256-RASNMNlmRtIreeznffYMDUxBXcMRjijEaaGF/gxT6vw=\" crossorigin=\"anonymous\" defer></script><link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"><link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\"><script src=\"view.js\" defer></script><link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\"></head><body><script type=\"text/javascript\">"
#define HTML_END "</script><div id=\"main-part\" class=\"container\"><div class=\"page-header\"><h2>ESP-Weather <small>v2</small></h2></div><div class=\"row\" id=\"contentDiv\"><div id=\"startDiv\" class=\"col-sm-12 col-md-12 col-lg-12\" style=\"display: none;\"><div class=\"panel panel-primary\"><div class=\"panel-heading\" id=\"listSensorsHeading\"></div><div class=\"panel-body\"><ul class=\"list-group\" id=\"listSensors\"></ul><div id=\"alertDiv\"></div><button class=\"btn btn-primary\" disabled=\"\" id=\"btnSubmit\"></button></div></div></div><div id=\"dataDiv\" class=\"col-sm-12 col-md-12 col-lg-12\" style=\"display: none;\"><div class=\"panel panel-primary\"><ul id=\"navbar\" class=\"nav nav-pills\"></ul><div class=\"panel-body\"><div id=\"contentPanel\"><div class=\"row\"><div class=\"col-sm-12 col-md-12 col-lg-6\"><div id=\"temperatureDiv\" class=\"embed-responsive embed-responsive-4by3\"><canvas id=\"temperatureChart\"></canvas></div></div><div class=\"col-sm-12 col-md-12 col-lg-6\"><div id=\"humidityDiv\" class=\"embed-responsive embed-responsive-4by3\"><canvas id=\"humidityChart\"></canvas></div></div></div></div></div></div></div></div></div><div class=\"footer\"><div class=\"container\"><p class=\"text-muted text-center\"> &copy; Copyright 2016 by Christian H&ouml;gerle and Thomas Buck <br><small><small><a href=\"https://github.com/xythobuz/ESP-Weather\"> ESP-Weather is free software! </a></small></small></p></div></div></body></html>"
#define JS_FILE "textAvailableSensors = \"Available Sensors\";\ntextButtonNext = \"Continue\";\nbackTabName = '<span class=\"glyphicon glyphicon-step-backward\" aria-hidden=\"true\"></span>';\nhomeTabName = '<span class=\"glyphicon glyphicon-home\" aria-hidden=\"true\"></span>';\nsensorTabName = \"Sensor\";\nerrorMessage = \"Couldn't read sensor with IP: \";\nerrorTitle = \"Error: \";\ntemperatureLabel = 'Temperature [C]';\nhumidityLabel = 'Humidity [%RH]';\ntemperatureHeading = \"Temperature\";\nhumidityHeading = \"Humidity\";\nsingleChartTempColor = \"#337ab7\";\nsingleChartHumidColor = \"#337ab7\";\npreDefinedColors = Array(\n\"#337ab7\", \"#ff0000\", \"#00ff00\"\n);\nvar actTime = new Date();\nactTime = actTime.getHours() + \":\" + (actTime.getMinutes() < 10 ? '0':'') + actTime.getMinutes();\nvar arrSensor = Array(); var currentState = \"initial\"; \n$(document).ready(resizeAndRedraw);\n$(window).on('resize', resizeAndRedraw, false);\nfunction redraw(animate) {\nif (currentState === \"initial\") {\ninitialView();\n} else if (currentState === \"main\") {\ngenerateView(arrSensor, animate);\n} else {\nvar n = Math.floor(Number(currentState));\nif ((String(n) === currentState) && (n >= 0)) {\ngenerateGraph(false, arrSensor[(currentState - 1)], animate);\n} else {\nconsole.log(\"Invalid state: \" + currentState);\n}\n}\n}\nfunction resize() {\n$(\"canvas\").each(function(i, el) {\n$(el).attr({\n\"width\":$(el).parent().width(),\n\"height\":$(el).parent().outerHeight()\n});\n});\n}\nfunction resizeAndRedraw(animate) {\nresize();\nredraw(animate);\n}\nfunction initialView() {\n$('#startDiv').show();\n$('#dataDiv').hide();\n$('#btnSubmit').empty();\n$('#btnSubmit').html(textButtonNext);\n$('#listSensorsHeading').empty();\n$('#listSensorsHeading').html(textAvailableSensors + \" (0/\" + clients.length + \")\");\n$('#listSensors').empty();\narrSensor = Array();\nvar count = [0];\njQuery.each(clients, function(index, client) {\nwebSocket(client, \"2391\", count, clients.length);\n});\n$(\"#btnSubmit\").click(function(event) {\ncurrentState = \"main\";\nresizeAndRedraw(true);\n});\n}\nfunction webSocket(wsUri, wsPort, count, clientsCount) {\nwebsocket = new WebSocket(\"ws://\" + wsUri + \":\" + wsPort + \"/\");\nwebsocket.onopen = function(evt) {};\nwebsocket.onclose = function(evt) {};\nwebsocket.onmessage = function(evt) {\nvar jsonData = jQuery.parseJSON(evt.data);\ncount[0]++;\nvar sensor = {id: count[0], ip: wsUri, currentTemp: jsonData['T'], currentHum: jsonData['H']};\nvar arrEEPROM = Array();\njQuery.each(jsonData['EEPROM'], function(index, data) {\narrEEPROM.push(data);\n});\nsensor.arrEEPROM = arrEEPROM;\narrSensor.push(sensor);\n$('#listSensorsHeading').html(textAvailableSensors + \" (\" + sensor.id + \"/\" + clientsCount + \")\");\n$('#listSensors').append('<li class=\"list-group-item\">' +\n' Sensor ' + sensor.id +\n' | IP: ' + sensor.ip +\n' | Temperature: ' + sensor.currentTemp +\n' | Humidity: ' + sensor.currentHum +\n'</li>');\nif(count[0] == clientsCount) {\n$('#btnSubmit').prop(\"disabled\", false);\n}\n};\nwebsocket.onerror = function(evt) {\nif($('#websocketError').length ) {\n$('.alert-danger').append(errorMessage + wsUri + '<br>');\n} else {\n$('#alertDiv').append('<div class=\"alert alert-danger\" id=\"websocketError\">' +\n'<strong>' + errorTitle\n+ '</strong><br>' + errorMessage\n+ wsUri + '<br></div>');\n}\nconsole.log(\"WebSocket Error: \" + evt.data);\n};\n}\nfunction generateView(arrSensor, animation) {\n$('#startDiv').hide();\n$('#dataDiv').show();\n$('#navbar').empty();\n$('#navbar').append('<li><a id=\"backbut\" class=\"navtab\" data-toggle=\"tab\" href=\"#start\" aria-label=\"start page\">' + backTabName + '</a></li>');\n$('#navbar').append('<li class=\"active\"><a id=\"homebut\" class=\"navtab\" data-toggle=\"tab\" href=\"#home\">' + homeTabName + '</a></li>');\nif (arrSensor.length > 1) {\njQuery.each(arrSensor, function(index, sensor) {\n$('#navbar').append('<li><a id=\"sensbut\" class=\"navtab\" data-toggle=\"tab\" href=\"#' + sensor.id + '\">' + sensorTabName + ' ' + sensor.id + '</a></li>');\n});\n}\ngenerateGraph(true, arrSensor, animation);\n$(\"#backbut\").click(function(event) {\ncurrentState = \"initial\";\nredraw();\n});\n$(\"#homebut\").click(function(event) {\ngenerateGraph(true, arrSensor, true);\ncurrentState = \"main\";\n});\nif (arrSensor.length > 1) {\n$(\"#sensbut\").click(function(event) {\ngenerateGraph(false, arrSensor[(event.target.text.split(\" \")[1] - 1)], true);\ncurrentState = event.target.text.split(\" \")[1];\n});\n}\n}\nfunction generateGraph(flag, sensor, anim) {\nresize();\nif (flag) {\nvar length = 0;\njQuery.each(sensor, function(index, tmp) {\nif(length < tmp.arrEEPROM.length) {\nlength = tmp.arrEEPROM.length;\n}\n});\nvar labels = Array();\nactHour = actTime.split(\":\")[0];\nfor(var i = length; i > 0; i--) {\nlabels.unshift(actHour + \":00\");\nactHour = (actHour - 1).mod(24);\n}\nlabels.push(actTime);\nvar dataTemperature = Array();\nvar dataHumidity = Array();\nvar tmpDataTemperature = Array();\nvar tmpDataHumidity = Array();\njQuery.each(sensor, function(index, tmp) {\nfor (var i = 0; i < (length - tmp.arrEEPROM.length); i++) {\ntmpDataTemperature.push([]);\ntmpDataHumidity.push([]);\n}\njQuery.each(tmp.arrEEPROM, function(index, value) {\ntmpDataTemperature.push(value['T']);\ntmpDataHumidity.push(value['H']);\n});\ntmpDataTemperature.push(tmp.currentTemp);\ntmpDataHumidity.push(tmp.currentHum);\nvar lineColor = getColor(index);\ndataTemperature.push({label: sensorTabName + \" \" + tmp.id, data: tmpDataTemperature, fill: false,\nborderWidth: 3, borderColor : lineColor,});\ndataHumidity.push({label: sensorTabName + \" \" + tmp.id, data: tmpDataHumidity, fill: false,\nborderWidth: 3, borderColor : lineColor,});\ntmpDataTemperature = [];\ntmpDataHumidity = [];\n});\n} else {\nvar labels = Array();\nvar tmpDataTemperature = Array();\nvar tmpDataHumidity = Array();\nactHour = actTime.split(\":\")[0];\nactHour = (actHour - sensor.arrEEPROM.length).mod(24);\njQuery.each(sensor.arrEEPROM, function(index, value) {\nactHour = (actHour + 1).mod(24);\nlabels.push(actHour + \":00\");\ntmpDataTemperature.push(value['T']);\ntmpDataHumidity.push(value['H']);\n});\nlabels.push(actTime);\ntmpDataTemperature.push(sensor.currentTemp);\ntmpDataHumidity.push(sensor.currentHum);\nvar dataTemperature = [{label: temperatureLabel, data: tmpDataTemperature,\nfill: false, borderWidth: 3, borderColor: singleChartTempColor,}];\nvar dataHumidity = [{label: humidityLabel, data: tmpDataHumidity,\nfill: false, borderWidth: 3, borderColor: singleChartHumidColor,}];\n}\nvar tempCtx = $('#temperatureChart');\nvar humCtx = $('#humidityChart');\nvar tempOptions = {\ntitle: {\ndisplay: true,\ntext: temperatureHeading\n},\nresponsive: true,\nmaintainAspectRatio: true,\nscaleOverride: true,\n};\nvar humOptions = {\ntitle: {\ndisplay: true,\ntext: humidityHeading\n},\nresponsive: true,\nmaintainAspectRatio: true,\nscaleOverride: true,\n};\nif (!anim) {\ntempOptions.animation = false;\nhumOptions.animation = false;\n}\nvar tempChart = new Chart(tempCtx, {\ntype: 'line',\ndata: {\nlabels: labels,\ndatasets: dataTemperature,\n},\noptions: tempOptions\n});\nvar humCharts = new Chart(humCtx, {\ntype: 'line',\ndata: {\nlabels: labels,\ndatasets: dataHumidity,\n},\noptions: humOptions\n});\n}\nNumber.prototype.mod = function(n) {\nreturn ((this%n)+n)%n;\n}\nfunction getColor(index) {\nif (index < preDefinedColors.length) {\nreturn preDefinedColors[index];\n} else {\nreturn getRandomColor();\n}\n}\nfunction getRandomColor() {\nvar letters = '0123456789ABCDEF'.split('');\nvar color = '#';\nfor (var i = 0; i < 6; i++ ) {\ncolor += letters[Math.floor(Math.random() * 16)];\n}\nreturn color;\n}"
#define CSS_FILE "#listSensorsHeading { font-size: 18px; }"

const static unsigned int faviconSize = 1406;
const static char faviconMimeType[] PROGMEM = "image/x-icon";
const static unsigned char favicon[] PROGMEM = {
    0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x10, 0x10, 
    0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x68, 0x05, 
    0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x28, 0x00, 
    0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 
    0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0xff, 0xe8, 0xc9, 0x00, 0xff, 0xde, 
    0xb3, 0x00, 0xff, 0x91, 0x00, 0x00, 0x3d, 0xf9, 
    0xff, 0x00, 0xff, 0xd3, 0x99, 0x00, 0x01, 0x29, 
    0x00, 0x00, 0xeb, 0x85, 0x00, 0x00, 0x02, 0x8c, 
    0x00, 0x00, 0x01, 0x40, 0x00, 0x00, 0xd1, 0x77, 
    0x00, 0x00, 0x01, 0x52, 0x00, 0x00, 0xff, 0xba, 
    0x61, 0x00, 0x02, 0x6b, 0x00, 0x00, 0xff, 0xb1, 
    0x4a, 0x00, 0xff, 0xa1, 0x26, 0x00, 0xff, 0xf3, 
    0xe3, 0x00, 0xff, 0xc4, 0x78, 0x00, 0xe3, 0xfe, 
    0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x0b, 
    0x0d, 0x0d, 0x0d, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x0d, 0x0d, 0x0d, 0x09, 0x09, 
    0x0b, 0x0b, 0x0d, 0x0d, 0x0d, 0x0d, 0x08, 0x0d, 
    0x0d, 0x0d, 0x0d, 0x0b, 0x0b, 0x0b, 0x06, 0x06, 
    0x09, 0x09, 0x0b, 0x0b, 0x0b, 0x0d, 0x0d, 0x0d, 
    0x0b, 0x0b, 0x0b, 0x0b, 0x09, 0x09, 0x00, 0x00, 
    0x06, 0x09, 0x09, 0x09, 0x0b, 0x0b, 0x0b, 0x0b, 
    0x0b, 0x0b, 0x09, 0x09, 0x06, 0x06, 0x10, 0x10, 
    0x00, 0x06, 0x06, 0x06, 0x09, 0x09, 0x09, 0x09, 
    0x09, 0x09, 0x06, 0x06, 0x00, 0x00, 0x10, 0x10, 
    0x10, 0x00, 0x00, 0x00, 0x06, 0x09, 0x09, 0x06, 
    0x06, 0x06, 0x00, 0x00, 0x10, 0x10, 0x01, 0x01, 
    0x01, 0x01, 0x01, 0x00, 0x00, 0x06, 0x06, 0x00, 
    0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 
    0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00, 0x02, 
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x05, 0x05, 
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 
    0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x11, 0x11, 
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 
    0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0c, 0x0c, 
    0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 
    0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0e, 0x0e, 
    0x0e, 0x04, 0x04, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 
    0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0f, 0x0f, 
    0x04, 0x12, 0x12, 0x04, 0x0f, 0x0f, 0x0f, 0x0f, 
    0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x03, 0x03, 
    0x04, 0x12, 0x12, 0x04, 0x03, 0x03, 0x03, 0x03, 
    0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x07, 0x07, 
    0x07, 0x04, 0x04, 0x07, 0x07, 0x07, 0x07, 0x07, 
    0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0a, 0x0a, 
    0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 
    0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x0a, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

#endif // __STATIC_H__

